@page "/dashboard"
@using Models.Dtos
@using Services
@inject ISensorService ISensorService

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="4">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;"></MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    List<SensorDto> systemRecordList = [];
    List<SensorDto> latestSystemRecordList = [];
    List<string> modelList = [];
    decimal optimalPh = 7;
    decimal optimalTemp = 1;
    decimal optimalSun = 1;
    decimal optimalTurbidity = 1;
    decimal optimalSalinity = 1;


    protected async override Task OnInitializedAsync()
    {
        systemRecordList = await ISensorService.GetAllSystemRecords();
        modelList = systemRecordList.Select(u => u.Model).Distinct().ToList();
        foreach (string model in modelList)
        {
            SensorDto latestRecord = systemRecordList.Where(u => u.Model == model).MaxBy(u => u.Timestamp) 
                                        ?? throw new Exception("No model found.");
            latestSystemRecordList.Append(latestRecord);
        }

    }
}
