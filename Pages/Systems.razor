@page "/systems"
@using Models.Dtos
@using Services
@inject ISensorService ISensorService

@if (page == "systems")
{
    <MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            @foreach (var system in systemList)
            {
                <MudItem xs="12" sm="6">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 100%; cursor: pointer" onclick="@(() => OpenSensorData(system.Model))">
                        <MudStack Spacing="3">
                            <MudText Typo="Typo.h6">Model: @system.Model</MudText>
                            <MudGrid>
                                <MudItem xs="6">
                                    <MudStack>
                                        <MudText Typo="Typo.caption">Timestamp: @system.Timestamp</MudText>
                                        <MudText Typo="Typo.caption">pH: @(ConvertToTwoDecimalPoint(system.Ph))</MudText>
                                        <MudText Typo="Typo.caption">Temperature: @(ConvertToTwoDecimalPoint(system.Temperature))</MudText>
                                    </MudStack>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudStack>
                                        <MudText Typo="Typo.caption">Sunlight Intensity: @(ConvertToTwoDecimalPoint(system.SunlightIntensity))</MudText>
                                        <MudText Typo="Typo.caption">Turbidity: @(ConvertToTwoDecimalPoint(system.Turbidity))</MudText>
                                        <MudText Typo="Typo.caption">Salinity: @(ConvertToTwoDecimalPoint(system.Salinity))</MudText>
                                    </MudStack>
                                </MudItem>
                            </MudGrid>
                        </MudStack>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}
else if(page == "sensor")
{
    <MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">
        <MudGrid Spacing="5">
            <MudItem xs="12">
                <MudStack Spacing="2">
                    <MudStack>
                        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" OnClick="ReturnToSystemsPage" Style="padding: 0px; position: absolute; left: 280px; top:100px" aria-label="back"></MudIconButton>
                        <MudText Typo="Typo.h6" Style="display: flex; justify-content:center;">Model: @sensorModel</MudText>
                        <MudDivider />
                    </MudStack>
                    <MudPaper Class="px-5 py-5" Style="">
                        <MudGrid>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2">Last retrieval datetime: @sensorRecordLatest.Timestamp</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2">Date installed: 22/01/2024</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudStack>
            </MudItem>
            <MudItem xs="12">
                <MudStack Spacing="2">
                    <MudText Typo="Typo.h6" Style="display: flex; justify-content:center;">Last Week Statistics</MudText>
                    <MudDivider />
                    <MudGrid>
                        <MudItem xs="12">
                            <MudGrid Spacing="2">
                                <MudItem xs="12" sm="6">
                                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px; padding-left: 30px; padding-right: 30px;">
                                        <RadzenChart Style="height: 100%">
                                            <RadzenLineSeries Data="@latestSensorRecordEachDayOfPreviousWeek" ValueProperty="Ph" CategoryProperty="Timestamp" Title="@sensorModel" LineType="LineType.Solid" Smooth="true">
                                                <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle" />
                                            </RadzenLineSeries>
                                            <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay">
                                                <RadzenAxisTitle Text="Day" />
                                            </RadzenCategoryAxis>
                                            <RadzenValueAxis>
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="pH" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="12" sm="6">
                                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                                        <RadzenChart Style="height: 100%">
                                            <RadzenLineSeries Data="@latestSensorRecordEachDayOfPreviousWeek" ValueProperty="Temperature" CategoryProperty="Timestamp" Title="@sensorModel" LineType="LineType.Solid" Smooth="true">
                                                <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle" />
                                            </RadzenLineSeries>
                                            <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay">
                                                <RadzenAxisTitle Text="Day" />
                                            </RadzenCategoryAxis>
                                            <RadzenValueAxis>
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="Temperature" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </MudPaper>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem xs="12">
                            <MudGrid Spacing="2">
                                <MudItem xs="12" sm="6">
                                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px; padding-left: 30px; padding-right: 30px;">
                                        <RadzenChart Style="height: 100%">
                                            <RadzenLineSeries Data="@latestSensorRecordEachDayOfPreviousWeek" ValueProperty="SunlightIntensity" CategoryProperty="Timestamp" Title="@sensorModel" LineType="LineType.Solid" Smooth="true">
                                                <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle" />
                                            </RadzenLineSeries>
                                            <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay">
                                                <RadzenAxisTitle Text="Day" />
                                            </RadzenCategoryAxis>
                                            <RadzenValueAxis>
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="Sunlight Intensity" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="12" sm="6">
                                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                                        <RadzenChart Style="height: 100%">
                                            <RadzenLineSeries Data="@latestSensorRecordEachDayOfPreviousWeek" ValueProperty="Turbidity" CategoryProperty="Timestamp" Title="@sensorModel" LineType="LineType.Solid" Smooth="true">
                                                <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle" />
                                            </RadzenLineSeries>
                                            <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay">
                                                <RadzenAxisTitle Text="Day" />
                                            </RadzenCategoryAxis>
                                            <RadzenValueAxis>
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="Turbidity" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </MudPaper>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem xs="12">
                            <MudGrid Spacing="2">
                                <MudItem xs="12" sm="3" />
                                <MudItem xs="12" sm="6">
                                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px; padding-left: 30px; padding-right: 30px;">
                                        <RadzenChart Style="height: 100%">
                                            <RadzenLineSeries Data="@latestSensorRecordEachDayOfPreviousWeek" ValueProperty="Salinity" CategoryProperty="Timestamp" Title="@sensorModel" LineType="LineType.Solid" Smooth="true">
                                                <RadzenMarkers Visible="true" MarkerType="MarkerType.Circle" />
                                            </RadzenLineSeries>
                                            <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay">
                                                <RadzenAxisTitle Text="Day" />
                                            </RadzenCategoryAxis>
                                            <RadzenValueAxis>
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="Salinity" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="12" sm="3" />
                            </MudGrid>
                        </MudItem>
                    </MudGrid>
                </MudStack>
            </MudItem>
            <MudItem xs="12">
                <MudStack Spacing="2">
                    <MudText Typo="Typo.h6" Style="display: flex; justify-content:center;">Record History</MudText>
                    <MudDivider />
                    <MudTable Items="@sensorRecords" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@tableLoading" LoadingProgressColor="Color.Info">
                        <HeaderContent>
                            <MudTh>Date</MudTh>
                            <MudTh>Time</MudTh>
                            <MudTh>pH</MudTh>
                            <MudTh>Temperature</MudTh>
                            <MudTh>Sunlight Intensity</MudTh>
                            <MudTh>Turbidity</MudTh>
                            <MudTh>Salinity</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Date">@context.Timestamp.ToString("dd/MM/yyyy")</MudTd>
                            <MudTd DataLabel="Time">@context.Timestamp.ToString("HH:mm:ss")</MudTd>
                            <MudTd DataLabel="pH">@(ConvertToTwoDecimalPoint(context.Ph))</MudTd>
                            <MudTd DataLabel="Temperature">@(ConvertToTwoDecimalPoint(context.Temperature))</MudTd>
                            <MudTd DataLabel="Sunlight Intensity">@(ConvertToTwoDecimalPoint(context.SunlightIntensity))</MudTd>
                            <MudTd DataLabel="Turbidity">@(ConvertToTwoDecimalPoint(context.Turbidity))</MudTd>
                            <MudTd DataLabel="Salinity">@(ConvertToTwoDecimalPoint(context.Salinity))</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudStack>
            </MudItem>
            
        </MudGrid>
    </MudContainer>
    <MudScrollToTop>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowUpward" />
    </MudScrollToTop>
}

@code {
    List<SensorDto> systemList = new();
    List<SensorDto> sensorRecords = new();
    SensorDto sensorRecordLatest = new();
    SensorDto sensorRecordAverage = new();
    List<SensorDto> latestSensorRecordEachDayOfPreviousWeek = new();
    string sensorModel = "";
    string page = "systems";
    bool tableLoading = false;

    protected async override Task OnInitializedAsync()
    {
        systemList = await ISensorService.GetLatestSystemRecordsAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Data refreshes every 15 minutes in system details page.
            var timer = new PeriodicTimer(TimeSpan.FromMinutes(15));
            while (await timer.WaitForNextTickAsync())
            {
                if (sensorModel != "")
                {
                    OpenSensorData(sensorModel);
                }
                await InvokeAsync(() => StateHasChanged());
            }

            // Data refreshes every 2 second in all systems page.
            var timerRealtime = new PeriodicTimer(TimeSpan.FromSeconds(2));
            while (await timerRealtime.WaitForNextTickAsync())
            {
                systemList = ISensorService.GetLatestSystemRecords();
                await InvokeAsync(() => StateHasChanged());
            }
        }
    }

    private async void OpenSensorData(string model)
    {
        page = "sensor";
        sensorRecords = await ISensorService.GetSensorRecords(model);
        sensorRecordLatest = sensorRecords.First();
        sensorModel = sensorRecordLatest.Model;

        DateTime timestampLimit = DateTime.Now.AddDays(-7);
        List<SensorDto> sensorRecordsOfPreviousWeek = sensorRecords.Where(u => u.Timestamp > timestampLimit).ToList();

        // Get only the latest record for each day.
        var filteredModel = sensorRecordsOfPreviousWeek
            .GroupBy(u => u.Timestamp.Date)
            .Select(u => u.OrderByDescending(u => u.Timestamp).First())
            .ToList();
        latestSensorRecordEachDayOfPreviousWeek = filteredModel;
        // Make it so the record will be time-insensitive when displayed in graph with Day as x-axis.
        foreach (SensorDto latestRecordOfTheDay in latestSensorRecordEachDayOfPreviousWeek)
        {
            latestRecordOfTheDay.Timestamp = latestRecordOfTheDay.Timestamp.Date;
        }

        StateHasChanged();
    }

    string FormatAsDay(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("ddd");
        }

        return string.Empty;
    }

    private async Task ReturnToSystemsPage()
    {
        page = "systems";
        systemList = await ISensorService.GetLatestSystemRecordsAsync();
        await InvokeAsync(() => StateHasChanged());
    }

    private decimal ConvertToTwoDecimalPoint(decimal value)
    {
        decimal valueNew = decimal.Round(value, 2);
        return valueNew;
    }

}